server:
  port: 8084

spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
    admin:
      properties:
        bootstrap.servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
      group-id: ${spring.application.name}-consumer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.acme.commons.events.*"

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://eureka-server:8761/eureka}
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,kafka,beans,env
  endpoint:
    health:
      show-details: when-authorized
    kafka:
      enabled: true

logging:
  level:
    org.apache.kafka: INFO
    org.springframework.kafka: INFO
    com.acme.platform.event_orchestrator: DEBUG
    org.springframework.cloud.config: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"

