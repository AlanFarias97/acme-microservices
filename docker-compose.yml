name: acme-microservices

networks:
  acme-net:

volumes:
  identity_pgdata:
  billing_pgdata:
  hr_pgdata:

services:
  # === Plataforma ===
  config-server:
    build:
      context: ./platform/config-server
    image: ghcr.io/alanfarias97/acme-config-server:local
    environment:
      SPRING_APPLICATION_NAME: config-server
    networks: [acme-net]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8888/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s
    restart: unless-stopped

  eureka-server:
    build:
      context: ./platform/eureka-server
    image: ghcr.io/alanfarias97/acme-eureka-server:local
    environment:
      SPRING_APPLICATION_NAME: eureka-server
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_LABEL: main
      SPRING_CLOUD_CONFIG_FAIL_FAST: "true"
    depends_on:
      config-server:
        condition: service_healthy
    networks: [acme-net]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8761/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s
    restart: unless-stopped

  api-gateway:
    build:
      context: ./platform/api-gateway
    image: ghcr.io/alanfarias97/acme-api-gateway:local
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: api-gateway
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_LABEL: main
      SPRING_CLOUD_CONFIG_FAIL_FAST: "true"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks: [acme-net]
    restart: unless-stopped

  event-orchestrator:
    build:
      context: ./platform/event-orchestrator
    image: ghcr.io/alanfarias97/acme-event-orchestrator:local
    ports:
      - "8084:8084"
    environment:
      SPRING_APPLICATION_NAME: event-orchestrator
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_LABEL: main
      SPRING_CLOUD_CONFIG_FAIL_FAST: "true"
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks: [acme-net]
    restart: unless-stopped

  # === Datos ===
  identity-db:
    image: postgres:16
    ports:
      - "5431:5432"
    environment:
      POSTGRES_DB: identity_local
      POSTGRES_USER: identity
      POSTGRES_PASSWORD: identity
    volumes:
      - identity_pgdata:/var/lib/postgresql/data
    networks: [acme-net]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U identity -d identity_local -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  billing-db:
    image: postgres:16
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: billing_local
      POSTGRES_USER: billing
      POSTGRES_PASSWORD: billing
    volumes:
      - billing_pgdata:/var/lib/postgresql/data
    networks: [acme-net]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U billing -d billing_local -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  hr-db:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: hr_local
      POSTGRES_USER: hr
      POSTGRES_PASSWORD: hr
    volumes:
      - hr_pgdata:/var/lib/postgresql/data
    networks: [acme-net]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hr -d hr_local -h localhost"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  # === Infraestructura de Eventos ===
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks: [acme-net]
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    networks: [acme-net]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kafka UI para debugging (opcional pero muy Ãºtil)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: acme-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks: [acme-net]
    restart: unless-stopped

  # === Servicios ===
  identity-svc:
    build:
      context: ./services/identity-svc
    image: ghcr.io/alanfarias97/acme-identity-svc:local
    environment:
      SPRING_APPLICATION_NAME: identity-svc
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_LABEL: main
      SPRING_CLOUD_CONFIG_FAIL_FAST: "true"
      SPRING_DATASOURCE_URL: jdbc:postgresql://identity-db:5432/identity_local
      SPRING_DATASOURCE_USERNAME: identity
      SPRING_DATASOURCE_PASSWORD: identity
      SECURITY_JWT_SECRET: ${JWT_SECRET}
    depends_on:
      config-server: { condition: service_healthy }
      eureka-server:  { condition: service_healthy }
      identity-db:    { condition: service_healthy }
    networks: [acme-net]
    restart: unless-stopped

  billing-svc:
    build:
      context: ./services/billing-svc
    image: ghcr.io/alanfarias97/acme-billing-svc:local
    ports:
      - "8082:8082"
    environment:
      SPRING_APPLICATION_NAME: billing-svc
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_LABEL: main
      SPRING_CLOUD_CONFIG_FAIL_FAST: "true"
      SECURITY_JWT_SECRET: ${JWT_SECRET}
      SPRING_DATASOURCE_URL: jdbc:postgresql://billing-db:5432/billing_local
      SPRING_DATASOURCE_USERNAME: billing
      SPRING_DATASOURCE_PASSWORD: billing
    depends_on:
      config-server: { condition: service_healthy }
      eureka-server:  { condition: service_healthy }
      billing-db:     { condition: service_healthy }
    networks: [acme-net]
    restart: unless-stopped

  hr-svc:
    build:
      context: ./services/hr-svc
    image: ghcr.io/alanfarias97/acme-hr-svc:local
    ports:
      - "8083:8083"
    environment:
      SPRING_APPLICATION_NAME: hr-svc
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_CLOUD_CONFIG_LABEL: main
      SPRING_CLOUD_CONFIG_FAIL_FAST: "true"
      SECURITY_JWT_SECRET: ${JWT_SECRET}
      SPRING_DATASOURCE_URL: jdbc:postgresql://hr-db:5432/hr_local
      SPRING_DATASOURCE_USERNAME: hr
      SPRING_DATASOURCE_PASSWORD: hr
    depends_on:
      config-server: { condition: service_healthy }
      eureka-server:  { condition: service_healthy }
      hr-db:          { condition: service_healthy }
    networks: [acme-net]
    restart: unless-stopped
